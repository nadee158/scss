# ===============================
# = LPKEDI DATA SOURCE
# ===============================

# Set here configurations for the database connection
lpkedi.spring.datasource.driver=oracle.jdbc.OracleDriver

# Connection url for the database "netgloo_blog"
#lpkedi.spring.datasource.url = jdbc:oracle:thin:@172.18.178.80:1521:ORCL
lpkedi.spring.datasource.url = jdbc:oracle:thin:@172.18.178.80:1521:ORCL

# Username and password
lpkedi.spring.datasource.username = lpkedi
lpkedi.spring.datasource.password = radmin

# Keep the connection alive if idle for a long time (needed in production)
lpkedi.spring.datasource.testWhileIdle = true
lpkedi.spring.datasource.validationQuery = SELECT 1 FROM LPKEDI.HDL_IN

lpkedi.spring.datasource.cachePrepStmts=true
lpkedi.spring.datasource.prepStmtCacheSize=250
lpkedi.spring.datasource.prepStmtCacheSqlLimit=1024

lpkedi.spring.datasource.maximumPoolSize=35
lpkedi.spring.datasource.minimumIdle=3
lpkedi.spring.datasource.maxLifetime=2000000
lpkedi.spring.datasource.connectionTimeout=30000
lpkedi.spring.datasource.idleTimeout=30000
lpkedi.spring.datasource.leakDetection.threshold=2000
lpkedi.spring.datasource.pool-prepared-statements=true
lpkedi.spring.datasource.max-open-prepared-statements=250

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
lpkedi.spring.jpa.show-sql = true

lpkedi.spring.jpa.format_sql=true

# Naming strategy
lpkedi.spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
lpkedi.spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle10gDialect


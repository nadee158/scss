server.port = 8080
scss.client.port=8089

security.basic.enabled=false

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
spring.datasource.driver=oracle.jdbc.OracleDriver

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:oracle:thin:@172.18.178.80:1521:ORCL

# Username and password
spring.datasource.username = scss
spring.datasource.password = scss

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

spring.jpa.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto=validate

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle10gDialect


##################### Security Tokens ###########################################
scss.token.tokenExpirationTime=15
scss.token.tokenIssuer=http://scss.com.my
scss.token.tokenSigningKey=xm8EV6Hy5RMFK4EEACIDAwQus
scss.token.refreshTokenExpTime=60

redis.hostname=127.0.0.1
redis.port=6379
redis.password=root123

spring.jmx.enabled=false

server.error.whitelabel.enabled=false

lps.ip.address.default.port=20000
# // in ms, i.e. 3 seconds
lps.default.timeout.length=3000

lps.open.gate.signal=OGT
